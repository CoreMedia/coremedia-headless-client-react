# This file was generated. Do not edit manually.

schema {
  query: Query
}

"Indicates exactly one field must be supplied and this field must not be `null`."
directive @oneOf on INPUT_OBJECT

interface Augmentation {
  commerceRef: CommerceRef!
  content: Content_
  downloads: [CMDownload]!
  grid: PageGrid!
  id: ID!
  picture: CMPicture
  pictures: [CMPicture]!
  visuals: [CMVisual]!
}

" interfaces alphabetically"
interface Banner {
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
}

interface CMAbstractCategory {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  children: [CMLinkable]
  childrenPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  externalId: String
  footer: [CMLinkable]
  footerPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  grid: PageGrid
  header: [CMLinkable]
  headerPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  hidden: Boolean
  hiddenInSitemap: Boolean
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  parent: CMNavigation
  pdpPagegrid: PageGrid
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

"Models the properties of an article content object."
interface CMArticle {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMAudio {
  alt: String
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  caption: RichText
  captionAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the caption field.")
  captionLegacy(suppressRootTag: Boolean, view: String): String @deprecated(reason: "Replaced by new RichText type")
  captionReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the caption field.")
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  copyright: String
  creationDate: String!
  data: Blob
  dataUrl: String
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  fullyQualifiedUrl: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

"Models the properties of a page content object."
interface CMChannel {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  children: [CMLinkable]
  childrenPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  footer: [CMLinkable]
  footerPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  grid: PageGrid
  header: [CMLinkable]
  headerPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  hidden: Boolean
  hiddenInSitemap: Boolean
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  parent: CMNavigation
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMCollection {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  bannerItems: [Banner]
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailItems: [Detail]
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  items: [CollectionItem]
  itemsPaged(limit: Int, offset: Int): CollectionItemPaginationResult
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teasableItems: [CMTeasable]
  teasableItemsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMDownload {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  data: Blob
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  filename: String
  fullyQualifiedUrl: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMDynamicList {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  bannerItems: [Banner]
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailItems: [Detail]
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  items: [CollectionItem]
  itemsPaged(limit: Int, offset: Int): CollectionItemPaginationResult
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teasableItems: [CMTeasable]
  teasableItemsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMExternalChannel {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  categoryRef: CategoryRef
  children: [CMLinkable]
  childrenPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  externalId: String
  footer: [CMLinkable]
  footerPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  grid: PageGrid
  header: [CMLinkable]
  headerPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  hidden: Boolean
  hiddenInSitemap: Boolean
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  parent: CMNavigation
  pdpPagegrid: PageGrid
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMExternalLink {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  openInNewTab: Boolean
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  url: String
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMExternalPage {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  children: [CMLinkable]
  childrenPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  externalId: String
  externalUriPath: String
  footer: [CMLinkable]
  footerPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  grid: PageGrid
  header: [CMLinkable]
  headerPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  hidden: Boolean
  hiddenInSitemap: Boolean
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  parent: CMNavigation
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMExternalProduct {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  externalId: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  pdpPagegrid: PageGrid
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  productRef: ProductRef
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMGallery {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  bannerItems: [Banner]
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailItems: [Detail]
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  items: [CollectionItem]
  itemsPaged(limit: Int, offset: Int): CollectionItemPaginationResult
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaItems: [CMMedia]
  mediaItemsPaged(limit: Int, offset: Int): CMMediaPaginationResult
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teasableItems: [CMTeasable]
  teasableItemsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMHTML {
  alt: String
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  caption: RichText
  captionAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the caption field.")
  captionLegacy(suppressRootTag: Boolean, view: String): String @deprecated(reason: "Replaced by new RichText type")
  captionReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the caption field.")
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  copyright: String
  creationDate: String!
  data: Blob
  description: String
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  fullyQualifiedUrl: String
  html: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMImage {
  creationDate: String!
  data: Blob
  description: String
  id: ID!
  ignoreUpdates: Int
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  master: [CMLocalized!]!
  modificationDate: String!
  name: String!
  repositoryPath: String!
  type: String!
  uuid: UUID!
}

interface CMImageMap {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  displayPicture: Boolean
  displayShortText: Boolean
  displayTitle: Boolean
  extDisplayedDate: String
  hotZones: [Hotzone]
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  transformedHotZones: [TransformedHotZone]
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMInteractive {
  alt: String
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  caption: RichText
  captionAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the caption field.")
  captionLegacy(suppressRootTag: Boolean, view: String): String @deprecated(reason: "Replaced by new RichText type")
  captionReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the caption field.")
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  copyright: String
  creationDate: String!
  data: Blob
  dataUrl: String
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  fullyQualifiedUrl: String
  height: Int
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
  width: Int
}

interface CMLinkable {
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  viewtype: String
}

interface CMLocTaxonomy {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  children: [CMTaxonomy]
  childrenPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  externalReference: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  latitudeLongitude: String
  link: Link
  linkedSettings: [CMSettings]
  locChildren: [CMLocTaxonomy]
  locChildrenPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  parent: CMTaxonomy
  pathToRoot: [CMTaxonomy]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  postcode: String
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  value: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMLocalized {
  creationDate: String!
  id: ID!
  ignoreUpdates: Int
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  master: [CMLocalized!]!
  modificationDate: String!
  name: String!
  repositoryPath: String!
  type: String!
  uuid: UUID!
}

interface CMMedia {
  alt: String
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  caption: RichText
  captionAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the caption field.")
  captionLegacy(suppressRootTag: Boolean, view: String): String @deprecated(reason: "Replaced by new RichText type")
  captionReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the caption field.")
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  copyright: String
  creationDate: String!
  data: Blob
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  fullyQualifiedUrl: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMNavigation {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  children: [CMLinkable]
  childrenPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  grid: PageGrid
  hidden: Boolean
  hiddenInSitemap: Boolean
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  parent: CMNavigation
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMObject {
  creationDate: String!
  id: ID!
  modificationDate: String!
  name: String!
  repositoryPath: String!
  type: String!
  uuid: UUID!
}

interface CMPerson {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  displayName: String
  eMail: String
  extDisplayedDate: String
  firstName: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  jobTitle: String
  keywords: String
  keywordsList: [String!]!
  lastName: String
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  organization: String
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

"Models the properties of a picture content object."
interface CMPicture {
  alt: String
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  base64Images(cropNames: [String!]): [Base64Image]!
  caption: RichText
  captionAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the caption field.")
  captionLegacy(suppressRootTag: Boolean, view: String): String @deprecated(reason: "Replaced by new RichText type")
  captionReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the caption field.")
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  copyright: String
  creationDate: String!
  crops: [Crop!]!
  data: Blob
  dataUrl: String
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  fullyQualifiedUrl: String
  height: Int
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uriTemplate(imageFormat: ImageFormat): String
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
  width: Int
}

interface CMPlaceholder {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  placeholderId: String!
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMProduct {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  downloads: [CMDownload]
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  price: Float
  productCode: String
  productName: String
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMProductList {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  bannerItems: [Banner]
  categoryRef: CategoryRef
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailItems: [Detail]
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  externalId: String
  facet: String
  facets: [String]
  filteredItems(customFilterQueries: [FilterQueryArg]): [CollectionItem]
  filteredItemsPaged(customFilterQueries: [FilterQueryArg], limit: Int, offset: Int): CollectionItemPaginationResult
  filteredPagedItems(customFilterQueries: [FilterQueryArg], offset: Int): [CollectionItem] @deprecated(reason: "Use filteredItemsPaged(offset: Int, limit: Int, customFilterQueries: [FilterQueryArg]) instead")
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  items: [CollectionItem]
  itemsPaged(limit: Int, offset: Int): CollectionItemPaginationResult
  keywords: String
  keywordsList: [String!]!
  limit: Int
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  orderBy: String
  pagedItems(offset: Int): [CollectionItem] @deprecated(reason: "Use itemsPaged(offset: Int, limit: Int) instead")
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  productItems: [ProductRef]
  productOffset: Int
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  start: Int
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teasableItems: [CMTeasable]
  teasableItemsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMProductTeaser {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  externalId: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  productRef: ProductRef
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMQueryList {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  bannerItems: [Banner]
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailItems: [Detail]
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  filteredItems(customFilterQueries: [FilterQueryArg]): [CollectionItem]
  filteredItemsPaged(customFilterQueries: [FilterQueryArg], limit: Int, offset: Int): CollectionItemPaginationResult
  filteredPagedItems(customFilterQueries: [FilterQueryArg], offset: Int): [CollectionItem] @deprecated(reason: "Use filteredItemsPaged(offset: Int, limit: Int, customFilterQueries: [FilterQueryArg]) instead")
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  items: [CollectionItem]
  itemsPaged(limit: Int, offset: Int): CollectionItemPaginationResult
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  pagedItems(offset: Int): [CollectionItem] @deprecated(reason: "Use itemsPaged(offset: Int, limit: Int) instead")
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teasableItems: [CMTeasable]
  teasableItemsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMResourceBundle {
  creationDate: String!
  id: ID!
  ignoreUpdates: Int
  locale: String
  localizationRoot: CMLocalized!
  localizations: MapOfString
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  master: [CMLocalized!]!
  modificationDate: String!
  name: String!
  repositoryPath: String!
  type: String!
  uuid: UUID!
}

interface CMSelectionRules {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  bannerItems: [Banner]
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  defaultContent: [CMTeasable!]!
  detailItems: [Detail]
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  items: [CollectionItem]
  itemsPaged(limit: Int, offset: Int): CollectionItemPaginationResult
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  rules: [PersonalizationRule!]!
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teasableItems: [CMTeasable]
  teasableItemsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMSettings {
  creationDate: String!
  id: ID!
  identifier: String
  ignoreUpdates: Int
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  master: [CMLocalized!]!
  modificationDate: String!
  name: String!
  repositoryPath: String!
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String]]): JSON
  type: String!
  uuid: UUID!
}

interface CMSite {
  creationDate: String!
  id: ID!
  ignoreUpdates: Int
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  master: [CMLocalized!]!
  modificationDate: String!
  name: String!
  repositoryPath: String!
  root: CMNavigation
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  type: String!
  uuid: UUID!
}

interface CMSpinner {
  alt: String
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  caption: RichText
  captionAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the caption field.")
  captionLegacy(suppressRootTag: Boolean, view: String): String @deprecated(reason: "Replaced by new RichText type")
  captionReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the caption field.")
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  copyright: String
  creationDate: String!
  data: Blob
  dataUrl: String
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  fullyQualifiedUrl: String
  height: Int
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  sequence: [CMPicture]
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
  width: Int
}

interface CMTaxonomy {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  children: [CMTaxonomy]
  childrenPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  externalReference: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  parent: CMTaxonomy
  pathToRoot: [CMTaxonomy]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  value: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMTeasable {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMTeaser {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

interface CMVideo {
  alt: String
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  caption: RichText
  captionAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the caption field.")
  captionLegacy(suppressRootTag: Boolean, view: String): String @deprecated(reason: "Replaced by new RichText type")
  captionReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the caption field.")
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  copyright: String
  creationDate: String!
  data: Blob
  dataUrl: String
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  fullyQualifiedUrl: String
  height: Int
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  timeLine: TimeLine
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
  width: Int
}

interface CMVisual {
  alt: String
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  caption: RichText
  captionAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the caption field.")
  captionLegacy(suppressRootTag: Boolean, view: String): String @deprecated(reason: "Replaced by new RichText type")
  captionReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the caption field.")
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  copyright: String
  creationDate: String!
  data: Blob
  dataUrl: String
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  extDisplayedDate: String
  fullyQualifiedUrl: String
  height: Int
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  "Retrieves settings as JSON by a list of list with path segments, e.g. settings(path: [[\"path1-segment1\", \"path1-segment2\"], [\"path2-segment1\", \"path2-segment2\"]]. Supports \"\\*\" as a wildcard to retrieve all settings at once: settings(path: \"\\*\")"
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
  width: Int
}

interface Catalog {
  defaultCatalog: Boolean
  externalId: String
  externalTechId: String
  id: ID!
  locale: String
  masterCatalog: Boolean
  name: String
  rootCategory: Category
  shortId: String
  siteId: String
}

interface Category {
  augmentation: CategoryAugmentation!
  breadcrumb: [Category]!
  children: [Category]!
  externalId: String
  externalTechId: String
  id: ID!
  imageUrl: String
  locale: String
  longDescription: String
  name: String
  parent: Category
  products: [Product]!
  shortDescription: String
  shortId: String
  siteId: String
}

interface CategoryAugmentation {
  commerceRef: CommerceRef!
  content: Content_
  downloads: [CMDownload]!
  grid: PageGrid!
  id: ID!
  picture: CMPicture
  pictures: [CMPicture]!
  visuals: [CMVisual]!
}

interface CollectionItem {
  remoteLink(context: String, siteId: String): String!
}

interface CommerceBean {
  externalId: String
  externalTechId: String
  id: ID!
  locale: String
  shortId: String
  siteId: String
}

interface CommerceRef {
  catalogId: String!
  externalId: String!
  id: ID!
  internalLink: String!
  locale: String!
  siteId: String!
  storeId: String!
}

interface Content_ {
  creationDate: String!
  id: ID!
  modificationDate: String!
  name: String!
  repositoryPath: String!
  type: String!
  uuid: UUID!
}

interface Detail {
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the detailText field.")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the detailText field.")
}

interface HasPageGrid {
  grid: PageGrid
}

interface Metadata {
  catalogId: String
  externalId: String
  externalTechId: String
  id: ID!
  locale: String
  metaDescription: String
  metaKeywords: [String]
  pageTitle: String
  seoPath: String
  storeId: String
  type: String
}

interface PageGridPlacement {
  colspan: Int!
  column: Int!
  id: ID
  items: [CMLinkable!]!
  name: String!
  viewtype: String
  width: Int!
}

interface Product {
  augmentation: ProductAugmentation!
  category: Category
  currency: String
  defaultImageAlt: String
  defaultImageUrl: String
  definingAttributes: [ProductAttribute]!
  describingAttributes: [ProductAttribute]!
  externalId: String
  externalTechId: String
  id: ID!
  imageUrl: String
  listPrice: BigDecimal
  locale: String
  longDescription: String
  metaDescription: String
  metaKeywords: String
  name: String
  offerPrice: BigDecimal
  seoSegment: String
  shortDescription: String
  shortId: String
  siteId: String
  storefrontUrl: String
  thumbnailUrl: String
  title: String
  variant: Boolean!
  variants: [ProductVariant]!
}

interface ProductAugmentation {
  commerceRef: CommerceRef!
  content: Content_
  downloads: [CMDownload]!
  grid: PageGrid!
  id: ID!
  pdpPagegrid: PageGrid!
  picture: CMPicture
  pictures: [CMPicture]!
  visuals: [CMVisual]!
}

interface ProductVariant {
  category: Category
  currency: String
  defaultImageAlt: String
  defaultImageUrl: String
  definingAttributes: [ProductAttribute]!
  describingAttributes: [ProductAttribute]!
  externalId: String
  externalTechId: String
  id: ID!
  imageUrl: String
  listPrice: BigDecimal
  locale: String
  longDescription: String
  metaDescription: String
  metaKeywords: String
  name: String
  offerPrice: BigDecimal
  parent: Product
  seoSegment: String
  shortDescription: String
  shortId: String
  siteId: String
  storefrontUrl: String
  thumbnailUrl: String
  title: String
  variant: Boolean!
  variants: [ProductVariant]!
}

"  Support for Apollo Federation. See https://www.apollographql.com/docs/federation/federation-spec"
union _Entity = ContentRef

"  Named content slot on a page containing a list of content references."
type Assignment {
  "  The campaign the assignment belongs to."
  campaign: Campaign!
  id: ID!
  "  Content items linked into the slot."
  items: [ContentRef!]!
  "  All configured Refinements of this Assignment (e.g. refinement: [\"women-dressed\", \"sale\"])."
  refinements: [String!]!
}

type AugmentationImpl implements Augmentation & HasPageGrid {
  commerceRef: CommerceRef!
  content: Content_
  downloads: [CMDownload]!
  grid: PageGrid!
  id: ID!
  media: [CMMedia]
  picture: CMPicture
  pictures: [CMPicture]!
  remoteLink(context: String, siteId: String): String!
  visuals: [CMVisual]!
}

" types alphabetically"
type Base64Image {
  base64: String
  cropName: String!
}

type Blob {
  contentType: String!
  eTag: String!
  size: Int! @deprecated(reason: "Replaced by #sizeLong to support Blobs > 2GB")
  sizeLong: Long!
  uri: String
}

type CMAbstractCategoryImpl implements Banner & CMAbstractCategory & CMChannel & CMLinkable & CMLocalized & CMNavigation & CMObject & CMTeasable & CollectionItem & Content_ & Detail & HasPageGrid {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  categoryRef: CategoryRef
  children: [CMLinkable]
  childrenPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  externalId: String
  footer: [CMLinkable]
  footerPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  grid: PageGrid
  header: [CMLinkable]
  headerPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  hidden: Boolean
  hiddenInSitemap: Boolean
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  parent: CMNavigation
  pdpPagegrid: PageGrid
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMArticleImpl implements Banner & CMArticle & CMLinkable & CMLocalized & CMObject & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMAudioImpl implements Banner & CMAudio & CMLinkable & CMLocalized & CMMedia & CMObject & CMTeasable & CollectionItem & Content_ & Detail {
  alt: String
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  caption: RichText
  captionAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the caption field.")
  captionLegacy(suppressRootTag: Boolean, view: String): String @deprecated(reason: "Replaced by new RichText type")
  captionReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the caption field.")
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  copyright: String
  creationDate: String!
  data: Blob
  dataUrl: String
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  fullyQualifiedUrl: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMChannelImpl implements Banner & CMChannel & CMLinkable & CMLocalized & CMNavigation & CMObject & CMTeasable & CollectionItem & Content_ & Detail & HasPageGrid {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  children: [CMLinkable]
  childrenPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  footer: [CMLinkable]
  footerPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  grid: PageGrid
  header: [CMLinkable]
  headerPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  hidden: Boolean
  hiddenInSitemap: Boolean
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  parent: CMNavigation
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMCollectionImpl implements Banner & CMCollection & CMLinkable & CMLocalized & CMObject & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  bannerItems: [Banner]
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailItems: [Detail]
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  items: [CollectionItem]
  itemsPaged(limit: Int, offset: Int): CollectionItemPaginationResult
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teasableItems: [CMTeasable]
  teasableItemsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMDownloadImpl implements Banner & CMDownload & CMLinkable & CMLocalized & CMObject & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  data: Blob
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  filename: String
  fullyQualifiedUrl: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMDynamicListImpl implements Banner & CMCollection & CMDynamicList & CMLinkable & CMLocalized & CMObject & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  bannerItems: [Banner]
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailItems: [Detail]
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  items: [CollectionItem]
  itemsPaged(limit: Int, offset: Int): CollectionItemPaginationResult
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teasableItems: [CMTeasable]
  teasableItemsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMExternalChannelImpl implements Banner & CMAbstractCategory & CMChannel & CMExternalChannel & CMLinkable & CMLocalized & CMNavigation & CMObject & CMTeasable & CollectionItem & Content_ & Detail & HasPageGrid {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  categoryRef: CategoryRef
  children: [CMLinkable]
  childrenPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  externalId: String
  footer: [CMLinkable]
  footerPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  grid: PageGrid
  header: [CMLinkable]
  headerPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  hidden: Boolean
  hiddenInSitemap: Boolean
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  parent: CMNavigation
  pdpPagegrid: PageGrid
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMExternalLinkImpl implements Banner & CMExternalLink & CMLinkable & CMLocalized & CMObject & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  openInNewTab: Boolean
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  url: String
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMExternalPageImpl implements Banner & CMChannel & CMExternalPage & CMLinkable & CMLocalized & CMNavigation & CMObject & CMTeasable & CollectionItem & Content_ & Detail & HasPageGrid {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  children: [CMLinkable]
  childrenPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  externalId: String
  externalUriPath: String
  footer: [CMLinkable]
  footerPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  grid: PageGrid
  header: [CMLinkable]
  headerPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  hidden: Boolean
  hiddenInSitemap: Boolean
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  parent: CMNavigation
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMExternalProductImpl implements Banner & CMExternalProduct & CMLinkable & CMLocalized & CMObject & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  externalId: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  pdpPagegrid: PageGrid
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  productRef: ProductRef
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMGalleryImpl implements Banner & CMCollection & CMGallery & CMLinkable & CMLocalized & CMObject & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  bannerItems: [Banner]
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailItems: [Detail]
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  items: [CollectionItem]
  itemsPaged(limit: Int, offset: Int): CollectionItemPaginationResult
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaItems: [CMMedia]
  mediaItemsPaged(limit: Int, offset: Int): CMMediaPaginationResult
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teasableItems: [CMTeasable]
  teasableItemsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMHTMLImpl implements Banner & CMHTML & CMLinkable & CMLocalized & CMMedia & CMObject & CMTeasable & CollectionItem & Content_ & Detail {
  alt: String
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  caption: RichText
  captionAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the caption field.")
  captionLegacy(suppressRootTag: Boolean, view: String): String @deprecated(reason: "Replaced by new RichText type")
  captionReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the caption field.")
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  copyright: String
  creationDate: String!
  data: Blob
  description: String
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  fullyQualifiedUrl: String
  html: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMImageImpl implements CMImage & CMLocalized & CMObject & Content_ {
  creationDate: String!
  data: Blob
  description: String
  id: ID!
  ignoreUpdates: Int
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  master: [CMLocalized!]!
  modificationDate: String!
  name: String!
  repositoryPath: String!
  type: String!
  uuid: UUID!
}

type CMImageMapImpl implements Banner & CMImageMap & CMLinkable & CMLocalized & CMObject & CMTeasable & CMTeaser & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  displayPicture: Boolean
  displayShortText: Boolean
  displayTitle: Boolean
  extDisplayedDate: String
  hotZones: [Hotzone]
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  transformedHotZones: [TransformedHotZone]
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMInteractiveImpl implements Banner & CMInteractive & CMLinkable & CMLocalized & CMMedia & CMObject & CMTeasable & CMVisual & CollectionItem & Content_ & Detail {
  alt: String
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  caption: RichText
  captionAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the caption field.")
  captionLegacy(suppressRootTag: Boolean, view: String): String @deprecated(reason: "Replaced by new RichText type")
  captionReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the caption field.")
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  copyright: String
  creationDate: String!
  data: Blob
  dataUrl: String
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  fullyQualifiedUrl: String
  height: Int
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
  width: Int
}

type CMLinkableImpl implements CMLinkable & CMLocalized & CMObject & CollectionItem & Content_ {
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  segment: String
  settings(paths: [[String!]!]!): JSON
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  viewtype: String
}

type CMLinkablePaginationResult {
  result: [CMLinkable]
  totalCount: Long
}

type CMLocTaxonomyImpl implements Banner & CMLinkable & CMLocTaxonomy & CMLocalized & CMObject & CMTaxonomy & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  children: [CMTaxonomy]
  childrenPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  externalReference: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  latitudeLongitude: String
  link: Link
  linkedSettings: [CMSettings]
  locChildren: [CMLocTaxonomy]
  locChildrenPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  parent: CMTaxonomy
  pathToRoot: [CMTaxonomy]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  postcode: String
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  value: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMLocTaxonomyPaginationResult {
  result: [CMLocTaxonomy]
  totalCount: Long
}

type CMLocalizedImpl implements CMLocalized & CMObject & Content_ {
  creationDate: String!
  id: ID!
  ignoreUpdates: Int
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  master: [CMLocalized!]!
  modificationDate: String!
  name: String!
  repositoryPath: String!
  type: String!
  uuid: UUID!
}

type CMMediaImpl implements Banner & CMLinkable & CMLocalized & CMMedia & CMObject & CMTeasable & CollectionItem & Content_ & Detail {
  alt: String
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  caption: RichText
  captionAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the caption field.")
  captionLegacy(suppressRootTag: Boolean, view: String): String @deprecated(reason: "Replaced by new RichText type")
  captionReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the caption field.")
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  copyright: String
  creationDate: String!
  data: Blob
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  fullyQualifiedUrl: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMMediaPaginationResult {
  result: [CMMedia]
  totalCount: Long
}

type CMNavigationImpl implements Banner & CMLinkable & CMLocalized & CMNavigation & CMObject & CMTeasable & CollectionItem & Content_ & Detail & HasPageGrid {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  children: [CMLinkable]
  childrenPaged(limit: Int, offset: Int): CMLinkablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  grid: PageGrid
  hidden: Boolean
  hiddenInSitemap: Boolean
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  parent: CMNavigation
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMObjectImpl implements CMObject & Content_ {
  creationDate: String!
  id: ID!
  modificationDate: String!
  name: String!
  repositoryPath: String!
  type: String!
  uuid: UUID!
}

type CMPersonImpl implements Banner & CMLinkable & CMLocalized & CMObject & CMPerson & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  displayName: String
  eMail: String
  extDisplayedDate: String
  firstName: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  jobTitle: String
  keywords: String
  keywordsList: [String!]!
  lastName: String
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  organization: String
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMPictureImpl implements Banner & CMLinkable & CMLocalized & CMMedia & CMObject & CMPicture & CMTeasable & CMVisual & CollectionItem & Content_ & Detail {
  alt: String
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  base64Images(cropNames: [String!]): [Base64Image]!
  caption: RichText
  captionAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the caption field.")
  captionLegacy(suppressRootTag: Boolean, view: String): String @deprecated(reason: "Replaced by new RichText type")
  captionReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the caption field.")
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  copyright: String
  creationDate: String!
  crops: [Crop!]!
  data: Blob
  dataUrl: String
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  fullyQualifiedUrl: String
  height: Int
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uriTemplate(imageFormat: ImageFormat): String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
  width: Int
}

type CMPicturePaginationResult {
  result: [CMPicture]
  totalCount: Long
}

type CMPlaceholderImpl implements Banner & CMLinkable & CMLocalized & CMObject & CMPlaceholder & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  placeholderId: String!
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMProductImpl implements Banner & CMLinkable & CMLocalized & CMObject & CMProduct & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  downloads: [CMDownload]
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  price: Float
  productCode: String
  productName: String
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMProductListImpl implements Banner & CMCollection & CMDynamicList & CMLinkable & CMLocalized & CMObject & CMProductList & CMQueryList & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  bannerItems: [Banner]
  categoryRef: CategoryRef
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailItems: [Detail]
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  externalId: String
  facet: String
  facets: [String]
  filteredItems(customFilterQueries: [FilterQueryArg]): [CollectionItem]
  filteredItemsPaged(customFilterQueries: [FilterQueryArg], limit: Int, offset: Int): CollectionItemPaginationResult
  filteredPagedItems(customFilterQueries: [FilterQueryArg], offset: Int): [CollectionItem]
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  items: [CollectionItem]
  itemsPaged(limit: Int, offset: Int): CollectionItemPaginationResult
  keywords: String
  keywordsList: [String!]!
  limit: Int
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  orderBy: String
  pagedItems(offset: Int): [CollectionItem]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  productItems: [ProductRef]
  productOffset: Int
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  start: Int
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teasableItems: [CMTeasable]
  teasableItemsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMProductTeaserImpl implements Banner & CMLinkable & CMLocalized & CMObject & CMProductTeaser & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  externalId: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  productRef: ProductRef
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMQueryListImpl implements Banner & CMCollection & CMDynamicList & CMLinkable & CMLocalized & CMObject & CMQueryList & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  bannerItems: [Banner]
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailItems: [Detail]
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  filteredItems(customFilterQueries: [FilterQueryArg]): [CollectionItem]
  filteredItemsPaged(customFilterQueries: [FilterQueryArg], limit: Int, offset: Int): CollectionItemPaginationResult
  filteredPagedItems(customFilterQueries: [FilterQueryArg], offset: Int): [CollectionItem]
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  items: [CollectionItem]
  itemsPaged(limit: Int, offset: Int): CollectionItemPaginationResult
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  pagedItems(offset: Int): [CollectionItem]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teasableItems: [CMTeasable]
  teasableItemsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMResourceBundleImpl implements CMLocalized & CMObject & CMResourceBundle & Content_ {
  creationDate: String!
  id: ID!
  ignoreUpdates: Int
  locale: String
  localizationRoot: CMLocalized!
  localizations: MapOfString
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  master: [CMLocalized!]!
  modificationDate: String!
  name: String!
  repositoryPath: String!
  type: String!
  uuid: UUID!
}

type CMSelectionRulesImpl implements Banner & CMCollection & CMDynamicList & CMLinkable & CMLocalized & CMObject & CMSelectionRules & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  bannerItems: [Banner]
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  defaultContent: [CMTeasable!]!
  detailItems: [Detail]
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  items: [CollectionItem]
  itemsPaged(limit: Int, offset: Int): CollectionItemPaginationResult
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  rules: [PersonalizationRule!]!
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teasableItems: [CMTeasable]
  teasableItemsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMSettingsImpl implements CMLocalized & CMObject & CMSettings & Content_ {
  creationDate: String!
  id: ID!
  identifier: String
  ignoreUpdates: Int
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  master: [CMLocalized!]!
  modificationDate: String!
  name: String!
  repositoryPath: String!
  settings(paths: [[String]]): JSON
  type: String!
  uuid: UUID!
}

type CMSiteImpl implements CMLocalized & CMObject & CMSite & Content_ {
  creationDate: String!
  id: ID!
  ignoreUpdates: Int
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  master: [CMLocalized!]!
  modificationDate: String!
  name: String!
  repositoryPath: String!
  root: CMNavigation
  settings(paths: [[String!]!]!): JSON
  type: String!
  uuid: UUID!
}

type CMSpinnerImpl implements Banner & CMLinkable & CMLocalized & CMMedia & CMObject & CMSpinner & CMTeasable & CMVisual & CollectionItem & Content_ & Detail {
  alt: String
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  caption: RichText
  captionAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the caption field.")
  captionLegacy(suppressRootTag: Boolean, view: String): String @deprecated(reason: "Replaced by new RichText type")
  captionReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the caption field.")
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  copyright: String
  creationDate: String!
  data: Blob
  dataUrl: String
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  fullyQualifiedUrl: String
  height: Int
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  sequence: [CMPicture]
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
  width: Int
}

type CMSpinnerPaginationResult {
  result: [CMSpinner]
  totalCount: Long
}

type CMTaxonomyImpl implements Banner & CMLinkable & CMLocalized & CMObject & CMTaxonomy & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  children: [CMTaxonomy]
  childrenPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  externalReference: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  parent: CMTaxonomy
  pathToRoot: [CMTaxonomy]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  value: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMTaxonomyPaginationResult {
  result: [CMTaxonomy]
  totalCount: Long
}

type CMTeasableImpl implements Banner & CMLinkable & CMLocalized & CMObject & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMTeasablePaginationResult {
  result: [CMTeasable]
  totalCount: Long
}

type CMTeaserImpl implements Banner & CMLinkable & CMLocalized & CMObject & CMTeasable & CMTeaser & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

type CMVideoImpl implements Banner & CMLinkable & CMLocalized & CMMedia & CMObject & CMTeasable & CMVideo & CMVisual & CollectionItem & Content_ & Detail {
  alt: String
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  caption: RichText
  captionAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the caption field.")
  captionLegacy(suppressRootTag: Boolean, view: String): String @deprecated(reason: "Replaced by new RichText type")
  captionReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the caption field.")
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  copyright: String
  creationDate: String!
  data: Blob
  dataUrl: String
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  fullyQualifiedUrl: String
  height: Int
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  timeLine: TimeLine
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
  width: Int
}

type CMVideoPaginationResult {
  result: [CMVideo]
  totalCount: Long
}

type CMVisualImpl implements Banner & CMLinkable & CMLocalized & CMMedia & CMObject & CMTeasable & CMVisual & CollectionItem & Content_ & Detail {
  alt: String
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  caption: RichText
  captionAsTree(view: String): RichTextTree @deprecated(reason: "Included in the RichText-Type of the caption field.")
  captionLegacy(suppressRootTag: Boolean, view: String): String @deprecated(reason: "Replaced by new RichText type")
  captionReferencedContent(view: String): [Content_!] @deprecated(reason: "Included in the RichText-Type of the caption field.")
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  copyright: String
  creationDate: String!
  data: Blob
  dataUrl: String
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  fullyQualifiedUrl: String
  height: Int
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
  width: Int
}

"  Holds minimal metadata of the Campaign"
type Campaign {
  id: ID!
  "  The priority of this slot."
  priority: Int!
}

type CatalogImpl implements Catalog & CommerceBean {
  defaultCatalog: Boolean
  externalId: String
  externalTechId: String
  id: ID!
  locale: String
  masterCatalog: Boolean
  name: String
  rootCategory: Category
  shortId: String
  siteId: String
}

type CategoryAugmentationImpl implements Augmentation & CategoryAugmentation {
  children: [CommerceRef]!
  commerceRef: CommerceRef!
  content: Content_
  downloads: [CMDownload]!
  grid: PageGrid!
  id: ID!
  media: [CMMedia]
  picture: CMPicture
  pictures: [CMPicture]!
  remoteLink(context: String, siteId: String): String!
  visuals: [CMVisual]!
}

type CategoryImpl implements Category & CommerceBean {
  augmentation: CategoryAugmentation!
  breadcrumb: [Category]!
  children: [Category]!
  externalId: String
  externalTechId: String
  id: ID!
  imageUrl: String
  locale: String
  longDescription: String
  name: String
  parent: Category
  products: [Product]!
  shortDescription: String
  shortId: String
  siteId: String
}

type CategoryRef implements CommerceRef {
  catalogId: String!
  category: Category
  externalId: String!
  id: ID!
  internalLink: String!
  locale: String!
  siteId: String!
  storeId: String!
}

type CollectionItemPaginationResult {
  result: [CollectionItem]
  totalCount: Long
}

type CommerceBeanImpl implements CommerceBean {
  externalId: String
  externalTechId: String
  id: ID!
  locale: String
  shortId: String
  siteId: String
}

type CommerceFacet {
  hitCount: Int
  key: String!
  label: String!
  multiSelect: Boolean
  values: [CommerceFacetValue]
}

type CommerceFacetValue {
  hitCount: Int
  label: String!
  query: String!
  selected: Boolean
}

type CommerceRoot {
  externalPage(externalId: String!, siteId: String!): CMExternalPage
}

type ContentPaginationResult {
  result: [Content_]
  totalCount: Long
}

type ContentRef {
  content: Content_
  "  The UUID of the CoreMedia Content (e.g. \"82be5043-e2d8-4db4-a6cb-3b58c2213825\")."
  id: ID!
}

"The type `ContentRoot` combines access to all content, non commerce related queries."
type ContentRoot {
  "Dedicated `article` query, returning a content object of type `CMArticle`, matching the given id."
  article(
    "The content id as `integer` or formatted as *coremedia:///cap/content/<id>* or its UUID."
    id: String!
  ): CMArticle
  categoryAugmentationBySegment(breadcrumb: [String]!, catalogAlias: String, externalId: String, rootSegment: String!): CategoryAugmentation
  categoryAugmentationBySite(breadcrumb: [String]!, catalogAlias: String, externalId: String, siteId: String!): CategoryAugmentation
  "The `content` query returns any known content object from the content repository by its content `id`."
  content(
    "The content id as `integer` or formatted as *coremedia:///cap/content/<id>* or its UUID."
    id: String!,
    "The expected content type, e.g. `CMArticle`."
    type: String
  ): Content_
  "A search with facets. Returns all available facets, if no `FacetFilter` are given."
  facetedSearch(
    """

    List of 'FilterQueryArg' objects: [{key1 : ["value1", "value2", ...]}, {key2: ["value1", "value2", ...]}, ...].
    FilterQueryArg keys must be provided in the bean 'filterQueryDefinitionMap'.
    """
    customFilterQueries: [FilterQueryArg],
    """

    List of `FacetFilter` input objects: [{facetAlias: "type", filterValues: ["CMArticle"]}, {facetAlias: "subject", filterValues: ["1234", "5678"]}, ...].
    If no `FacetFilter` is given, all configured facets are returned.
    """
    facetFilters: [FacetFilter!],
    "Limits the size of facet values per facet. Defaults to studio config if set or 5 if not."
    facetLimit: Int,
    "Limits the size of the search result."
    limit: Int,
    "Offset within the search result."
    offset: Int,
    """

    The search expression. Supports the operators '+' (mandatory) and '-' (prohibited) to mark terms respectively.
    Quotes may be used to combine several words into a phrase, which would otherwise be treated as single terms.
    Any odd (unbalanced) number of quotes are treated as non existent!
    The wildcard '*' is supported to find partial terms.
    """
    query: String!,
    "The `siteId`. As the facets are configured per site, `siteId` is mandatory."
    siteId: String!,
    """

    An array of sort fields, concatenated with their sort order by '_', in upper case, e.g. `ID_ASC`.
    The possible values are defined in the enum `SortFieldWithOrder`.
    Possible sort orders are: `ASC`, `DESC`
    """
    sortFields: [SortFieldWithOrder!]
  ): FacetedSearchResult
  "Get the localized taxonomy by id"
  localizedTaxonomy(
    "The content id as `integer` or formatted as *coremedia:///cap/content/<id>*  or its UUID."
    id: String!,
    locale: String
  ): LocalizedTaxonomy
  "Dedicated `page` query, returning a content object of type `CMChannel`, matching the given id."
  page(
    "The content id as `integer` or formatted as *coremedia:///cap/content/<id>*  or its UUID."
    id: String!
  ): CMChannel
  "The `pageByPath` query with return type `CMChannel` provides access to any page content by its navigation path."
  pageByPath(
    "The navigation path to the requested page. A navigation path is a concatenation of segments, separated by '/'."
    path: String!
  ): CMChannel
  "Dedicated `picture` query, returning a content object of type `CMPicture`, matching the given id."
  picture(
    "The content id as `integer` or formatted as *coremedia:///cap/content/<id>* or its UUID."
    id: String!
  ): CMPicture
  productAugmentationBySegment(breadcrumb: [String]!, catalogAlias: String, externalId: String!, rootSegment: String!): ProductAugmentation
  productAugmentationBySite(breadcrumb: [String]!, catalogAlias: String, externalId: String!, siteId: String!): ProductAugmentation
  productList(id: String!): CMProductList
  "Dedicated `queryList` query, returning a content object of type `CMQueryList`, matching the given id."
  queryList(
    "The content id as `integer` or formatted as *coremedia:///cap/content/<id>* or its UUID."
    id: String!
  ): CMQueryList
  "The `search` query provides access to a solr based full text search."
  search(
    "List of `FilterQueryArg` input objects: [{key1 : [\"value1\", \"value2\", ...]}, {key2: [\"value1\", \"value2\", ...]}, ...]."
    customFilterQueries: [FilterQueryArg],
    """

    Content types to restrict the search result to. Misspelled content types are ignored.
    When passing an abstract content type along with the parameter `includeSubTypes` = `true`, the subtypes are also retrieved.
    The search result does not contain abstract document types.
    """
    docTypes: [String],
    "Flag to include the sub types of the given doc types in the search. Defaults to `false`."
    includeSubTypes: Boolean,
    "Limits the size of the search result."
    limit: Int,
    "Offset within the search result."
    offset: Int,
    """

    The search expression. Supports the operators '+' (mandatory) and '-' (prohibited) to mark terms respectively.
    Quotes may be used to combine several words into a phrase, which would otherwise be treated as single terms.
    Any odd (unbalanced) number of quotes are treated as non existent!
    The wildcard '*' is supported to find partial terms.
    """
    query: String!,
    "The `siteId` can be passed as parameter to restrict search per site."
    siteId: String,
    """

    An array of sort fields, concatenated with their sort order by '_', in upper case, e.g. `ID_ASC`.

    The possible values are defined in the enum `SortFieldWithOrder`.

    Possible sort orders are: `ASC`, `DESC`
    """
    sortFields: [SortFieldWithOrder]
  ): SearchResult
  "Dedicated `site` query, returning a content object of type `Site`, matching the given site id."
  site(
    "The root segment of the requested site (of type `String`)."
    rootSegment: String,
    "The site id of the requested site (of type `String`)."
    siteId: String
  ): Site
  "The `sites` query delivers an array of type `Site` of all known sites in the content repository w/o any parameter necessary."
  sites: [Site]!
  "The `suggest` query provides access to a solr based suggestions."
  suggest(
    "List of `FilterQueryArg` input objects: [{key1 : [\"value1\", \"value2\", ...]}, {key2: [\"value1\", \"value2\", ...]}, ...]."
    customFilterQueries: [FilterQueryArg],
    "Content types to restrict the search result to. Misspelled content types are ignored."
    docTypes: [String!],
    "Flag to include the sub types of the given doc types in the search. Defaults to `false`."
    includeSubTypes: Boolean,
    "The query expression."
    query: String!,
    "The `siteId` can be passed as parameter to restrict search per site."
    siteId: String
  ): [Suggestion!]
  "Returns the list of supported taxonomy locales, configured in the global settings document `TaxonomySettings`."
  supportedTaxonomyLocales: JSON
  "Get taxonomy by id, type match for subtypes"
  taxonomy(
    "The content id as `integer` or formatted as *coremedia:///cap/content/<id>*  or its UUID."
    id: String!
  ): CMTaxonomy
  "Get taxonomy by path segments"
  taxonomyByPath(
    "Path segments from root to taxonomy, including the taxonomy value, separated by '/'. Alternatively only the taxonomy value can be provided."
    pathSegments: String,
    "The site id for taxonomy lookup in the site root folder. If no site id is given, taxonomies retrieved from the global path (/Settings/Taxonomies)."
    siteId: String,
    "Type of taxonomy: CMTaxonomy (default) or CMLocTaxonomy. Will be matched exactly."
    type: String
  ): CMTaxonomy
}

type Content_Impl implements Content_ {
  creationDate: String!
  id: ID!
  modificationDate: String!
  name: String!
  repositoryPath: String!
  type: String!
  uuid: UUID!
}

type Crop {
  aspectRatio: Dimension!
  minHeight: Int!
  minWidth: Int!
  name: String!
  sizes: [Dimension]!
}

type Dimension {
  height: Float!
  width: Float!
}

type ExtendedTeaserTarget {
  callToActionEnabled: Boolean
  callToActionHash: String
  callToActionText: String
  target: CMLinkable
}

" Pagination result types"
type ExtendedTeaserTargetPaginationResult {
  result: [ExtendedTeaserTarget]
  totalCount: Long
}

type Facet {
  alias: String!
  field: String!
  values: [FacetValue]
}

type FacetValue {
  hitCount: Long
  query: String!
  value: String!
}

"Result type of the `facetedSearch` query, containing the facets, metadata of the search result set and the result set itself."
type FacetedSearchResult {
  facets: [Facet!]!
  numFound: Int!
  result: [Content_]
}

type Hotzone {
  alt: String
  coords: String!
  displayAsInlineOverlay: Boolean
  inlineOverlayTheme: String
  linkedContent: CMLinkable
  shape: String!
  target: String
}

type ImageMapCrop {
  coords: [Point]!
  name: String!
}

type Link {
  id: ID!
  type: String
}

type LinkedContentEntry {
  key: String
  value: [CMObject]
}

type LinkedContentEntryPaginationResult {
  result: [LinkedContentEntry]
  totalCount: Long
}

type LocalizedTaxonomy {
  id: ID!
  value: String
}

type MetadataField {
  metadata: JSON
  name: String
}

type MetadataImpl implements Metadata {
  catalogId: String
  externalId: String
  externalTechId: String
  id: ID!
  locale: String
  metaDescription: String
  metaKeywords: [String]
  pageTitle: String
  seoPath: String
  storeId: String
  type: String
}

type MetadataRoot {
  types: [MetadataType]
}

type MetadataType {
  fields: [MetadataField]
  name: String
}

" Page Grid"
type PageGrid {
  cssClassName: String
  id: ID!
  name: String
  " retrieves the page grid placements as a flat list, optionally filtered by name"
  placements(excludeNames: [String], names: [String]): [PageGridPlacement]
  rows: [PageGridRow!]
}

type PageGridPlacementImpl implements PageGridPlacement {
  colspan: Int!
  column: Int!
  id: ID
  items: [CMLinkable!]!
  name: String!
  viewtype: String
  width: Int!
}

type PageGridRow {
  id: ID!
  placements: [PageGridPlacement!]
  rowId: Int!
}

type PersonalizationRule {
  referencedContent: [CMLocalized!]!
  rule: String
  target: CMTeasable
}

type Point {
  x: Float
  y: Float
}

type ProductAttribute {
  defining: Boolean!
  description: String
  displayName: String
  externalId: String
  id: String
  type: String
  unit: String
  value: String
  values: [String]!
}

type ProductAugmentationImpl implements Augmentation & ProductAugmentation {
  commerceRef: CommerceRef!
  content: Content_
  downloads: [CMDownload]!
  grid: PageGrid!
  id: ID!
  media: [CMMedia]
  pdpPagegrid: PageGrid!
  picture: CMPicture
  pictures: [CMPicture]!
  remoteLink(context: String, siteId: String): String!
  visuals: [CMVisual]!
}

type ProductImpl implements CommerceBean & Product {
  augmentation: ProductAugmentation!
  category: Category
  currency: String
  defaultImageAlt: String
  defaultImageUrl: String
  definingAttributes: [ProductAttribute]!
  describingAttributes: [ProductAttribute]!
  externalId: String
  externalTechId: String
  id: ID!
  imageUrl: String
  listPrice: BigDecimal
  locale: String
  longDescription: String
  metaDescription: String
  metaKeywords: String
  name: String
  offerPrice: BigDecimal
  remoteLink(context: String, siteId: String): String!
  seoSegment: String
  shortDescription: String
  shortId: String
  siteId: String
  storefrontUrl: String
  thumbnailUrl: String
  title: String
  variant: Boolean!
  variants: [ProductVariant]!
}

type ProductRef implements CollectionItem & CommerceRef {
  catalogId: String!
  externalId: String!
  id: ID!
  internalLink: String!
  locale: String!
  product: Product
  remoteLink(context: String, siteId: String): String!
  siteId: String!
  storeId: String!
}

type ProductSearchResult {
  items: [Product]
  resultFacets: [CommerceFacet]
  totalCount: Int!
}

type ProductVariantImpl implements CommerceBean & Product & ProductVariant {
  augmentation: ProductAugmentation!
  category: Category
  currency: String
  defaultImageAlt: String
  defaultImageUrl: String
  definingAttributes: [ProductAttribute]!
  describingAttributes: [ProductAttribute]!
  externalId: String
  externalTechId: String
  id: ID!
  imageUrl: String
  listPrice: BigDecimal
  locale: String
  longDescription: String
  metaDescription: String
  metaKeywords: String
  name: String
  offerPrice: BigDecimal
  parent: Product
  remoteLink(context: String, siteId: String): String!
  seoSegment: String
  shortDescription: String
  shortId: String
  siteId: String
  storefrontUrl: String
  thumbnailUrl: String
  title: String
  variant: Boolean!
  variants: [ProductVariant]!
}

type Query {
  "  Expose the service description in case you want to use Apollo Federation. See https://www.apollographql.com/docs/federation/federation-spec"
  _service: _Service!
  """

  # Find slot definitions managed via campaigns. Only published campaigns are taken into account.
  # Parameters:
  # - site: the site id
  # - channelType: Key used for the template type (e.g. values: "category-page", "content-page", ...). See also query "channelTypes".
  # - refinements: Sorted list of refinements (e.g. for a refinement for a category-page: "women-dressed", for a content-page: "82be5043-e2d8-4db4-a6cb-3b58c2213825" (the UUID of a CoreMedia Content)). The refinements are logically linked with or. The most important refinement should be defined first in the array, in case of multiple search hits.
  """
  campaignContent(channelType: String!, refinements: [String!], site: String!): SlotResult!
  catalog(catalogId: String, siteId: String): Catalog @deprecated(reason: "Marked for removal")
  catalogByAlias(catalogAlias: String, siteId: String): Catalog @deprecated(reason: "Marked for removal")
  catalogs(siteId: String): [Catalog] @deprecated(reason: "Marked for removal")
  " Returns a category or null if the category does not exist. The externalId can either be formatted (e.g commerce://category/categoryId) or plain (e.g. categoryId)"
  category(catalogId: String, categoryId: String!, siteId: String): Category
  categoryBySeoSegment(seoSegment: String!, siteId: String!): Category
  categoryByStore(catalogId: String, categoryId: String!, locale: String!, storeId: String!): Category @deprecated(reason: "Marked for removal")
  "  List of channel types for a given site."
  channelTypes(site: String): [String!]
  commerce: CommerceRoot
  commerceBean(commerceId: String!, siteId: String!): CommerceBean
  " Returns a commerce bean or null. This is a good call to make when previewing commerce items."
  commerceBeanByType(externalId: String!, siteId: String!, type: CommerceBeanType!): CommerceBean
  "The content root."
  content: ContentRoot
  metadata: MetadataRoot
  """

  # Preview campaign content for a given campaign id. The campaign doesn't necessarily need to be in state running.
  # Parameters:
  # - campaignId: the campaign id
  # - channelType: Key used for the template type (e.g. values: "category-page", "content-page", ...). See also query "channelTypes".
  # - refinements: Sorted list of refinements (e.g. for a refinement for a category-page: "women-dressed", for a content-page: "82be5043-e2d8-4db4-a6cb-3b58c2213825" (the UUID of a CoreMedia Content)). The refinements are logically linked with or. The most important refinement should be defined first in the array, in case of multiple search hits.
  """
  previewCampaign(campaignId: ID!, channelType: String!, refinements: [String!]): SlotResult!
  """

  # Same as campaignContent query, besides published also drafted or paused campaigns are taken into account.
  # Parameters:
  # - site: the site id
  # - channelType: Key used for the template type (e.g. values: "category-page", "content-page", ...). See also query "channelTypes".
  # - refinements: Sorted list of refinements (e.g. for a refinement for a category-page: "women-dressed", for a content-page: "82be5043-e2d8-4db4-a6cb-3b58c2213825" (the UUID of a CoreMedia Content)). The refinements are logically linked with or. The most important refinement should be defined first in the array, in case of multiple search hits.
  # - previewDate: Sets a simulated date of view for the preview to see how the campaings will look like in tbe future. The format of the string needs to be a valid ISO 8601 DateTime string. In other words, valid datetime strings of the form YYYY-MM-DDThh:mm:ss.SSSZ are accepted. The time zone offset is compulsory. The time zone offset must either be Z (representing the UTC time zone) or be in the format ±hh:mm:ss.
  # - status: List of campaign status to be considered for preview. Allowed values: "DRAFT", "ACTIVE"
  """
  previewCampaignContent(channelType: String!, previewDate: String, refinements: [String!], site: String!, status: [CampaignStatus!]): SlotResult!
  " Returns a product or null if the product does not exist. The externalId can either be formatted (e.g commerce://product/productId) or plain (e.g. productId)"
  product(catalogId: String, externalId: String!, siteId: String): Product
  productBySeoSegment(seoSegment: String!, siteId: String!): Product
  productVariant(catalogId: String, externalId: String!, siteId: String): ProductVariant @deprecated(reason: "Marked for removal")
  " Search for products fulfilling the search parameters. The categoryId can either be formatted (e.g commerce://category/categoryId) or plain (e.g. categoryId)"
  searchProducts(categoryId: String, filterFacets: [String], limit: Int, offset: Int, orderBy: String, searchTerm: String!, siteId: String): ProductSearchResult
  " Search for products fulfilling the search parameters."
  searchProductsFilterByCategorySeoSegment(categorySeoSegment: String, filterFacets: [String], limit: Int, offset: Int, orderBy: String, searchTerm: String!, siteId: String): ProductSearchResult
}

type RichText {
  text(suppressRootTag: Boolean, view: String): String
  textAsTree(view: String): RichTextTree
  textReferencedContent(view: String): [Content_!]
}

"Result type of the `search` query, containing metadata of the search result set and the result set itself."
type SearchResult {
  numFound: Int!
  result: [Content_]
}

"Models the properties of a site object."
type Site {
  crops: [Crop]
  derivedSites: [Site!]!
  id: ID!
  locale: String!
  name: String!
  repositoryPath: String!
  root: CMNavigation
}

"  The slot data."
type Slot {
  "  The most relevant assignment for the slot name. If there are multiple assignments from different campaigns for the slot name, the most relevant assignment is the one that has content assigned and is from the campaign with the highest priority. For assignments with the same relevance, the refinement query input is used to determine the most relevant assignment."
  assignment: Assignment
  "  The list of assignments for the slot name. The limit controls how many assignments are returned. Valid limits are 1 to 10. The assignments are sorted by relevance (see description of the assignment field)."
  assignments(limit: Int): [Assignment!]!
  id: ID!
  "  The name of a slot on a page (e.g. \"main\" or \"sidebar\")."
  name: String!
}

"  Result of a campaignContent query."
type SlotResult {
  "  List of slots."
  slots(names: [String!]): [Slot!]!
}

type Suggestion {
  count: Int!
  value: String!
}

type TeaserOverlaySettings {
  enabled: Boolean
  positionX: Int
  positionY: Int
  style: JSON
  width: Int
}

type TimeLine {
  defaultTarget: CMTeasable
  sequences: [TimeLineEntry]
}

type TimeLineEntry {
  link: CMTeasable
  startTimeMillis: Int
}

type TransformedHotZone {
  alt: String
  crops: [ImageMapCrop]
  displayAsInlineOverlay: Boolean
  inlineOverlayTheme: String
  linkedContent: CMLinkable
  points: [Point]
  shape: String
  target: String
}

type ViewTypeHeroCollection implements Banner & CMCollection & CMLinkable & CMLocalized & CMObject & CMTeasable & CollectionItem & Content_ & Detail {
  authors: [CMPerson]
  authorsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  bannerItems: [Banner]
  contentInSetting(paths: [[String!]!]!): [LinkedContentEntry]
  contentInSettingPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  contentInStruct(paths: [[String!]!]!): [LinkedContentEntry]
  contentInStructPaged(limit: Int, offset: Int, paths: [[String!]!]!): LinkedContentEntryPaginationResult
  context: CMNavigation
  creationDate: String!
  detailItems: [Detail]
  detailText: RichText
  detailTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  detailTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  detailTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  extDisplayedDate: String
  htmlDescription: String
  htmlTitle: String
  id: ID!
  ignoreUpdates: Int
  items: [CollectionItem]
  itemsPaged(limit: Int, offset: Int): CollectionItemPaginationResult
  keywords: String
  keywordsList: [String!]!
  link: Link
  linkedSettings: [CMSettings]
  locale: String
  localizationRoot: CMLocalized!
  localizedVariant(country: String, language: String!, variant: String): CMLocalized
  localizedVariants: [CMLocalized!]!
  locationTaxonomy: [CMLocTaxonomy]
  locationTaxonomyPaged(limit: Int, offset: Int): CMLocTaxonomyPaginationResult
  master: [CMLocalized!]!
  media: [CMMedia]
  mediaPaged(limit: Int, offset: Int): CMMediaPaginationResult
  modificationDate: String!
  name: String!
  navigationPath: [CMLinkable]
  picture: CMPicture
  pictures: [CMPicture]
  picturesPaged(limit: Int, offset: Int): CMPicturePaginationResult
  related: [CMTeasable]
  relatedPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  remoteLink(context: String, siteId: String): String!
  repositoryPath: String!
  root: CMNavigation
  segment: String
  settings(paths: [[String!]!]!): JSON
  spinner: CMSpinner
  spinners: [CMSpinner]
  spinnersPaged(limit: Int, offset: Int): CMSpinnerPaginationResult
  subjectTaxonomy: [CMTaxonomy]
  subjectTaxonomyPaged(limit: Int, offset: Int): CMTaxonomyPaginationResult
  teasableItems: [CMTeasable]
  teasableItemsPaged(limit: Int, offset: Int): CMTeasablePaginationResult
  teaserOverlaySettings: TeaserOverlaySettings
  teaserTarget: CMLinkable
  teaserTargets: [ExtendedTeaserTarget]
  teaserTargetsPaged(limit: Int, offset: Int): ExtendedTeaserTargetPaginationResult
  teaserText: RichText
  teaserTextAsTree(view: String): RichTextTree @deprecated(reason: "Replaced by new RichText type")
  teaserTextLegacy(view: String): String @deprecated(reason: "Replaced by new RichText type")
  teaserTextReferencedContent(view: String): [Content_!] @deprecated(reason: "Replaced by new RichText type")
  teaserTitle: String
  title: String
  type: String!
  uuid: UUID!
  validFrom: String
  validTo: String
  video: CMVideo
  videos: [CMVideo]
  videosPaged(limit: Int, offset: Int): CMVideoPaginationResult
  viewtype: String
}

" viewtype specific types"
type ViewTypeHeroPageGridPlacement implements PageGridPlacement {
  colspan: Int!
  column: Int!
  id: ID
  items: [CMLinkable!]!
  name: String!
  viewtype: String
  width: Int!
}

"  Service description of a subgraph used by Apollo Federation. See https://www.apollographql.com/docs/federation/federation-spec"
type _Service {
  sdl: String
}

"""

# Campaign Status to support status filters in campaign preview.
# - DRAFT: represents Draft, Paused
# - ACTIVE: represents Planned, Running
"""
enum CampaignStatus {
  ACTIVE
  DRAFT
}

enum CommerceBeanType {
  catalog
  category
  marketingspot
  product
  segment
  sku
}

" enums alphabetically"
enum ImageFormat {
  GIF
  JPEG
  JPG
  PNG
}

enum OrderBySortField {
  ORDER_BY_TYPE_PRICE_ASC
  ORDER_BY_TYPE_PRICE_DSC
}

"Enum of sort types for the `search` query."
enum SortFieldWithOrder {
  CREATION_DATE_ASC
  CREATION_DATE_DESC
  DOCUMENTTYPE_ASC
  DOCUMENTTYPE_DESC
  EXTERNALLY_DISPLAYED_DATE_ASC
  EXTERNALLY_DISPLAYED_DATE_DESC
  ID_ASC
  ID_DESC
  MODIFICATION_DATE_ASC
  MODIFICATION_DATE_DESC
  TEASER_TITLE_ASC
  TEASER_TITLE_DESC
  TITLE_ASC
  TITLE_DESC
}

"An arbitrary precision signed decimal"
scalar BigDecimal

"A JSON scalar"
scalar JSON

"A 64-bit signed integer"
scalar Long

"Built-in map of scalar type"
scalar MapOfString

"Built-in rich text object tree"
scalar RichTextTree

"A universally unique identifier compliant UUID Scalar"
scalar UUID

"Input type for faceted search requests."
input FacetFilter {
  "Exclude the filter value clause from facet calculation. Default is `true`."
  excludeInFacet: Boolean
  "An alias name of a configured facet."
  facetAlias: String!
  "Facet values to be excluded from the facet search result."
  filterValues: [String!]
}

"Input type to include custom dynamic filter queries with a search query."
input FilterQueryArg {
  "Excludes the given content ids from the search result."
  EXCLUDE_IDS: [String!]
  """

  A query for content matching a modification date older or newer than the given arguments.

  Expects either ["\*", "ISO_ZONED_DATE_TIME"] to match contents older than the given date or
  ["ISO_ZONED_DATE_TIME", "\*"] to match contents new than the given date.

  The date format is expected as `ISO_ZONED_DATE_TIME`, such as `2011-12-03T10:15:30+01:00[Europe/Paris]`.
  """
  FRESHNESS: [String!]
  """

  Includes only contents matching one of the given location taxonomies.

  Takes taxonomy values or complete path segments or taxonomy ids (numeric or content id).
  The first element may contain the site id, e.g. "siteId:corporate".
  If a siteId is given, the query is site specific, else global.
  """
  LOC_TAXONOMY_OR: [String!]
  """

  Includes only contents matching one of the given subject taxonoies.

  Takes taxonomy values or complete path segments or taxonomy ids (numeric or content id).
  The first element may contain the site id, e.g. "siteId:corporate".
  If a siteId is given, the query is site specific, else global.
  """
  SUBJ_TAXONOMY_OR: [String!]
  "A query for the given titles."
  TITLE_OR: [String!]
}
